@page "/"

@using DataLayer.Models;
@using ServiceLayer;
@inject IPasswordService PasswordManager;
@inject IUserService UserManager;
@inject NavigationManager NavManager;
@inject ISafeHandler SafeHandlerManager;

<table style="width:50%; margin-left:auto; margin-right:auto;" class="table table-dark table-striped">
    <thead>
        <tr>
            <th scope="col">Website</th>
            <th scope="col">Username</th>
            <th scope="col">Password</th>
            <th scope="col">Encryption key</th>
        </tr>
    </thead>
    <tbody>
        @{
            if (MyPasswords.Count > 0)
            {
                foreach (Password password in MyPasswords)
                {
                    <tr>
                        <td>@password.Website</td>
                        <td>@password.Username</td>
                        <td>@password.Pass <img @onclick="(() => ShowPassword(password.Id)) " src="Images/eye-regular.svg" width="18" height="18"/></td>
                        <td>@password.Key</td>
                    </tr>
                }
            }
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="() => ShowModal = !ShowModal">Add Website</button>
@if (ShowModal)
{
    <div style="width:300px; margin-left:auto; margin-right:auto;">
        <form>
            <!-- Password input -->
            <div class="form-outline mb-4">
                <input @bind-value="Website" type="text" id="form2Example1" class="form-control" />
                <label class="form-label" for="form2Example1">Website</label>
            </div>

            <!-- Email input -->
            <div class="form-outline mb-4">
                <input @bind-value="Username" type="text" id="form2Example2" class="form-control" />
                <label class="form-label" for="form2Example2">Username</label>
            </div>

            <!-- Password input -->
            <div class="form-outline mb-4">
                <input @bind-value="Password" type="password" id="form2Example3" class="form-control" />
                <label class="form-label" for="form2Example3">Password</label>
            </div>
            <!-- Submit button -->
            <button type="button" @onclick="() => AddWebsite()" class="btn btn-primary btn-block mb-4">Add</button>
        </form>
    </div>
}

@code {
    public List<Password> MyPasswords { get; set; } = new();
    public bool ShowModal { get; set; }

    public string? Website { get; set; }
    public string? Username { get; set; }
    public string? Password { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserManager.CheckIfLoggedIn())
        {
            await UpdatePasswordList();
        }
        else
        {
            NavManager.NavigateTo("/Login");
        }
    }

    private async Task UpdatePasswordList()
    {
        MyPasswords = PasswordManager.GetAllPasswords(UserManager.GetCurrentUser().Id);
    }

    private void AddWebsite()
    {
        if (!string.IsNullOrWhiteSpace(Website) && !string.IsNullOrWhiteSpace(Username) && !string.IsNullOrWhiteSpace(Password))
        {
            string publicKey = Convert.ToBase64String(SafeHandlerManager.GenerateRandomKey(32));
            PasswordManager.AddWebsite(
                Website,
                Username,
                Convert.ToBase64String(SafeHandlerManager.Encrypt(Password, publicKey)),
                publicKey,
                UserManager.GetCurrentUser()
            );

            ShowModal = false;
            NavManager.NavigateTo("/");
        }
    }

    private void ShowPassword(int Id)
    {
        Password password = MyPasswords.Where(p => p.Id == Id).First();
        string DecryptedPass = Convert.ToBase64String(SafeHandlerManager.Decrypt(password.Pass, password.Key));

        MyPasswords.Where(p => p.Id == Id).First().Pass = DecryptedPass;
    }
}
